(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),l=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(n),b=a,m=p["".concat(s,".").concat(b)]||p[b]||u[b]||o;return n?r.a.createElement(m,i(i({ref:t},d),{},{components:n})):r.a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var d=2;d<o;d++)s[d]=n[d];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(7),o=(n(0),n(103)),s={id:"b5",title:"\ud83d\udd79Creating HayWord Feature",slug:"/hayword-feature"},i={unversionedId:"b5",id:"b5",isDocsHomePage:!1,title:"\ud83d\udd79Creating HayWord Feature",description:"this time we will create a HayWord feature by attracting users to guess the word based on definitions, synonyms, and word types.",source:"@site/docs\\b5.md",slug:"/hayword-feature",permalink:"/docs/hayword-feature",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/b5.md",version:"current",sidebar:"someSidebar",previous:{title:"\ud83c\ude38Creating Translate Feature",permalink:"/docs/translate-feature"},next:{title:"\ud83d\udc4fCongratulations",permalink:"/docs/congrats"}},c=[{value:"Creating HayWord Menu With Generic Templates",id:"creating-hayword-menu-with-generic-templates",children:[]},{value:"Using the WordsAPI",id:"using-the-wordsapi",children:[]},{value:"Provide Hints and Check User Answers",id:"provide-hints-and-check-user-answers",children:[]}],d={rightToc:c};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null," this time we will create a HayWord feature by attracting users to guess the word based on definitions, synonyms, and word types."),Object(o.b)("h2",{id:"creating-hayword-menu-with-generic-templates"},"Creating HayWord Menu With Generic Templates"),Object(o.b)("p",null,"   ",Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/w_0.3,c_scale,bo_4px_solid_grey/v1603634150/menu_hayword_p2pimc.jpg",alt:"menu_hayword",title:"menu_hayword"}))),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"menuPayload")," variable for the menu template with Generic type."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'     let menuPayload = {\n     attachment:{\n     type:"template",\n     payload:{\n       template_type:"generic",\n       elements:[\n          {\n           title:"HayWord",  \n           image_url:"https://res.cloudinary.com/dzrwauiut/image/upload/v1603631463/HayWord_qj0hzv.png", //thumbnail image\n           subtitle:"enrich your vocabulary through a fun way", \n           buttons:[\n             {\n               type:"postback",\n               title:"\ud83d\udd79 Play",\n               payload:"PLAY_HAYWORD" //postback\n             }              \n           ]      \n         }\n       ]\n     }\n   }\n  }\n')),Object(o.b)("details",null,Object(o.b)("summary",null,"Show Details"),Object(o.b)("p",{parentName:"li"},Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/bo_4px_solid_grey/v1603632844/menuPayload_ttgukv.png",alt:"menuPayload",title:"menuPayload"})))))),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Find more Message template ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developers.facebook.com/docs/messenger-platform/send-messages/templates"}),"here")))),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Add menu instructions when the user is done saving their profile."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'//when the user saves the profile\n app.post("/setProfile", (req, res) => {\n  console.log(req.body);\n  db.doc(`users/${req.body.id}`)\n    .update({\n      language: `${req.body.lang}`\n    })\n    .then(function() {\n      language = req.body.lang\n      callSendAPI(req.body.id, {\n        text: \'Your Profile has Updated\' }\n        //add instructions to use menus and translate to users\n        .then(()=>{\n        callSendAPI(req.body.id, {\n        text: \'Type "menu" for accessing our feature or type "Translate <Word or Sentence that you want to translate to your language>"\' } )\n      })\n\n      res.status(200).end();\n     });\n });\n \n')),Object(o.b)("details",null,Object(o.b)("summary",null,"Show Details"),Object(o.b)("p",{parentName:"li"},Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/bo_4px_solid_grey/v1603633291/add_instructions_g853du.png",alt:"add_instructions",title:"add_instructions"}))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Displays the menu template from menuPayload when the user types ",Object(o.b)("inlineCode",{parentName:"p"},"menu")," in messenger in the handleMessage function."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"else if(received_message.text.toLowerCase() == 'menu'){\ncallSendAPI(sender_psid, menuPayload)\n}\n")),Object(o.b)("details",null,Object(o.b)("summary",null,"Show Details"),Object(o.b)("p",{parentName:"li"},Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/bo_4px_solid_grey/v1603633897/menu_Instruction_sqpjri.png",alt:"menu_Instruction",title:"menu_Instruction"})))))),Object(o.b)("h2",{id:"using-the-wordsapi"},"Using the WordsAPI"),Object(o.b)("p",null,"   Now we will use the API 'WordsAPI' in RapidAPI to translate the words that users input in the chat."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Go to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://rapidapi.com/dpventures/api/wordsapi/endpoints"}),"WordsAPI RapidAPI")," page, make sure you are logged in.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Just like the steps for using Just Translated API, subscribe to the test > choose the basic plan.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Copy the sample code provided by RapidAPI, on the right, select the programming language Node.js > Request."),Object(o.b)("details",null,Object(o.b)("summary",null,"Show Details"),Object(o.b)("p",{parentName:"li"},Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/bo_4px_solid_grey/v1603643999/copy_wordsapi_code_n12hax.png",alt:"copy_wordsapi_code",title:"copy_wordsapi_code"}))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"getWord ()")," function in the app.js file from the code previously copied to get the word the user will guess."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function getWord() {\n     return new Promise((resolve, reject) => {\n       var options = {\n         method: 'GET',\n         url: 'https://wordsapiv1.p.rapidapi.com/words/',\n         qs: {\n         //take the word randomly\n           random: 'true',\n           //at least 4 letters of the word selected\n           lettersMin: '4',\n           //the maximum word selected is 8 letters\n           lettersMax: '8',\n           //word generality level of at least 4.05 and a maximum of 8.03\n           frequencyMin: '4.05',\n           frequencyMax: '8.03',\n           //words have definite, word types, synonyms attributes\n           hasDetails: 'definitions,partofspeech,synonyms'\n         },\n         headers: {\n           'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\n           'x-rapidapi-key': process.env.RAPID_API_KEY,\n           useQueryString: true\n         }\n       };\n       request(options, function (error, response, body) {\n         if (error) reject(error);\n         const bodyParse = JSON.parse(body)\n         console.log(bodyParse);\n         const word = bodyParse.word;\n         const def = bodyParse.results[0].definition || '';\n         const wordType = bodyParse.results[0].partOfSpeech || '';\n         const synonym = bodyParse.results[0].synonyms || '';\n         //returns the value of the guessed word, definition, word type, and synonym\n         resolve([word, def, wordType, synonym])\n       });\n     })\n   }\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create the ",Object(o.b)("inlineCode",{parentName:"p"},"var modeHayWord; var word; var def; var wordType; var synonym; var censored; var featureHayWord = []; "),"globally."),Object(o.b)("details",null,Object(o.b)("summary",null,"Show Details"),Object(o.b)("p",{parentName:"li"},Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://res.cloudinary.com/dzrwauiut/image/upload/bo_4px_solid_grey/v1603653616/variabel_hayword_mwyvoo.png",alt:"variabel_hayword",title:"variabel_hayword"})))))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"We need to make it globally because the variables will be accessed by different function and use it as a state."))),Object(o.b)("ol",{start:6},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"PLAY_HAYWORD")," postback response to the handlePostback() function to call the getWord() function."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'//check if the payload is the same as PLAY_HAYWORD\n    else if(payload === \'PLAY_HAYWORD\'){\n    //set the modeHayWord variable to true\n        modeHayWord = true;\n        //call getWord function\n         getWord().then(data => {\n         //assigns a value to the variable according to the data obtained from the getWord function\n            word = data[0];\n            def = data[1];\n            wordType = data[2];\n            synonym = data[3];\n          //make word formatting visible at the beginning and end of letters eg F_ _ _ _ _ _ K (FACEBOOK)\n            var regex = /(?<!^).(?!$)/g;\n             censored = word.replace(regex, \' _ \')\n            \n          //create response quick replies as instructions for the user to guess the word\n           if (wordType != \'\') {\n              featureHayWord.push({\n                content_type: "text",\n                title: "Type of Word",\n                payload: "WORD_TYPE",\n              })\n            }\n            if (def != \'\') {\n              featureHayWord.push({\n                content_type: "text",\n                title: "Definition",\n                payload: "DEFINITION",\n              })\n            }\n            if (synonym != \'\') {\n              featureHayWord.push({\n                content_type: "text",\n                title: "Synonym",\n                payload: "SYNONYM",\n              })\n            }\n            featureHayWord.push({\n              content_type: "text",\n                title: "\ud83e\udd7a Surrender",\n                payload: "SURR",\n            })\n\n           response = {text: censored, quick_replies: featureHayWord}\n           return callSendAPI(sender_psid, response, "RESPONSE");\n         })\n      }\n')))),Object(o.b)("h2",{id:"provide-hints-and-check-user-answers"},"Provide Hints and Check User Answers"),Object(o.b)("p",null,"  now we will provide the hint to the user and check the user's answer whether it is right or wrong."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Updated the handleMessage() function to add hint responses and answer results."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"   async function handleMessage(sender_psid, received_message) {\n   let response;\n\n   // Checks if the message contains text\n   if (received_message.text) {\n     // Create the payload for a basic text message, which\n     // will be added to the body of our request to the Send API\n     console.log(received_message.nlp.entities);\n     const objNlp = received_message.nlp.entities;\n\n     if (\n       objNlp.intent &&\n       objNlp.intent[0].value == \"translate\" &&\n       objNlp.intent[0].confidence > 0.8 &&\n       objNlp.phrase_to_translate[0].confidence > 0.8\n     ) {\n       language = language\n         ? language\n         : await db\n             .doc(`users/${sender_psid}`)\n             .get()\n             .then(docSnapshot => {\n               if (docSnapshot.exists) {\n                 console.log(\"language from here\");\n                 return docSnapshot.data().language;\n               }\n             });\n\n       let tr = await translate(objNlp.phrase_to_translate[0].value, language);\n\n       response = {\n         text: tr\n       };\n       return callSendAPI(sender_psid, response);\n     }\n     else if(received_message.text.toLowerCase() == 'menu'){\n       response = menuPayload\n       return callSendAPI(sender_psid, response);\n     }\n     //check if the user is in a HayWord session\n     if(modeHayWord){\n     // give the user hints\n         if(received_message.quick_reply){\n           if(received_message.quick_reply.payload == 'WORD_TYPE'){\n             response = {text: wordType}\n           }\n           else if(received_message.quick_reply.payload == 'DEFINITION'){\n             response = {text: def}\n           }else if (received_message.quick_reply.payload == \"SYNONYM\") {\n             response = { text: synonym };\n           }else if (received_message.quick_reply.payload == \"SURR\") {\n            featureHayWord = []\n            return callSendAPI(sender_psid, { text: \"the Answer is \"+word }).then(() =>\n              callSendAPI(sender_psid, {text: 'don\\'t give up \ud83d\udcaa'})\n            );\n          }\n           return callSendAPI(sender_psid, response);\n         }\n         else if(received_message.text){\n         //check the user's answer whether it is correct or not\n           if(received_message.text.toLowerCase()== word){\n             modeHayWord = false;\n             featureHayWord = []\n              response = { text: 'Right Answer '}\n             return callSendAPI(sender_psid, response);\n           }\n           else{\n           response = {text: censored, quick_replies: featureHayWord}\n           return callSendAPI(sender_psid, {text: 'Wrong Answer'}).then(()=> callSendAPI(sender_psid,response,\"RESPONSE\"))\n\n             }\n             }\n         }\n       }\n     }\n")))))}l.isMDXComponent=!0}}]);